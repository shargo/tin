program = line+

<line> = LINE_START (statement_call | expression)

statement_call = symbol <WS> expression block?

block = INDENT line+ keyword_continuation* DEDENT

<keyword_continuation> = (DEDENT LINE_START keyword expression? INDENT line+)

<expression> = fncall_expression | operator_call

operator_call = fncall_expression (operator fncall_expression)+

<fncall_expression> = property_expression | function_call

function_call = callable_expression LPAREN (expression (COMMA expression)*)? RPAREN block?

<callable_expression> = grouping_expression | fncall_expression

<property_expression> = atom | property_call

property_call = callable_expression DOT symbol

<atom> = grouping_expression | symbol | number | keyword

<grouping_expression> = <WS?> LPAREN expression <WS?> RPAREN

<symbol> = <WS?> SYMBOL

SYMBOL = #'[\p{L}][-+=!$%^&*<>_|\p{L}\p{N}]*'

<keyword> = <WS?> KEYWORD

KEYWORD = #'[\p{L}]+:'

<operator> = <WS?> OPERATOR

OPERATOR = #'[-+=!$%^&*<>_][-+=!$%^&*<>_|\p{L}\p{N}]*'

<number> = <WS?> NUMBER

NUMBER = #'[\d]+'

<DOT> = <'.'>

<COMMA> = <WS?> <','>

<LPAREN> = <'('>

<RPAREN> = <WS?> <')'>

<WS> = #'\s+'

<LINE_START> = <WS?> <'≈'>

<INDENT> = <WS?> <'»'>

<DEDENT> = <WS?> <'«'>
