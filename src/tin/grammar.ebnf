program = (LINE_START statement)+

statement = head statement_args | expression

head = SYMBOL

statement_args = expression* block?

fnexpr = atom

block = INDENT (LINE_START statement)+ keyword_continuation* DEDENT

<keyword_continuation> = (DEDENT LINE_START KEYWORD expression? INDENT (LINE_START statement)+)

<expression> = property_expression | operator_expression

operator_expression = property_expression (OPERATOR property_expression)+

<property_expression> = atom | property_call

property_call = atom (DOT atom)+

<atom> = SYMBOL | NUMBER | KEYWORD | fncall | grouping_expression

<grouping_expression> = LPAREN expression RPAREN

fncall = atom arglist

arglist = LPAREN RPAREN | LPAREN expression (COMMA expression)* RPAREN

SYMBOL = #'[\p{L}][-+=!$%^&*<>_|\p{L}\p{N}]*'

KEYWORD = #'[\p{L}]+:'

OPERATOR = #'[-+=!$%^&*<>_][-+=!$%^&*<>_|\p{L}\p{N}]*'

NUMBER = #'[\d]+'

<COLON> = <':'>

<DOT> = <'.'>

<COMMA> = <','>

<LPAREN> = <'('>

<RPAREN> = <')'>

<LINE_START> = <'≈'>

<INDENT> = <'»'>

<DEDENT> = <'«'>
