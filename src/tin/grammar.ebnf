program = line+ LINE_START

<line> = LINE_START (statement_call | expression)

statement_call = symbol <WS> expression block?

block = INDENT line+ keyword_continuation* DEDENT

<keyword_continuation> = (DEDENT LINE_START keyword expression? INDENT line+)

<expression> = fncall_expression | operator_call

operator_call = fncall_expression (operator fncall_expression)+

<fncall_expression> = property_expression | function_call

function_call = callable_expression LPAREN (expression (COMMA expression)*)? RPAREN block?

<callable_expression> = grouping_expression | fncall_expression

<property_expression> = atom | property_call

property_call = callable_expression DOT symbol

<atom> = grouping_expression | symbol | keyword | number | string | code_string

<grouping_expression> = <WS>? LPAREN expression RPAREN

<symbol> = <WS>? <'SYMBOL('> SYMBOL <')'>

SYMBOL = #'[^)]*'

<keyword> = <WS>? <'KEYWORD('> KEYWORD <')'>

KEYWORD =  #'[^)]*'

<operator> = <WS>? <'OPERATOR('> OPERATOR <')'>

OPERATOR =  #'[^)]*'

<number> = <WS>? <'NUMBER('> NUMBER <')'>

<string> = <WS>? <'STRING('> STRING <')'>

STRING = #'[^)]*'

<code_string> = <WS>? <'CODE_STRING('> CODE_STRING <')'>

CODE_STRING = #'[^)]*'

NUMBER =  #'[^)]*'

<DOT> = <'DOT'>

<COMMA> = <WS>? <'COMMA'>

<LPAREN> = <'LPAREN'>

<RPAREN> = <WS>? <'RPAREN'>

<LINE_START> = <WS>? <'LINE_START'>

<INDENT> = <WS>? <'INDENT'>

<DEDENT> = <WS>? <'DEDENT'>

<WS> = <'WS'>