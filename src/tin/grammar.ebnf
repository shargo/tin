program = (LINE_START statement)+

<statement> = statement_call | expression

statement_call = SYMBOL expression block?

fnexpr = atom

block = INDENT (LINE_START statement)+ keyword_continuation* DEDENT

<keyword_continuation> = (DEDENT LINE_START KEYWORD expression? INDENT (LINE_START statement)+)

<expression> = fncall_expression | operator_expression

operator_expression = fncall_expression (OPERATOR fncall_expression)+

<fncall_expression> = atom | fncall

fncall = atom grouping_expression

arglist = LPAREN RPAREN | LPAREN expression (COMMA expression)* RPAREN

<atom> = property_call | SYMBOL | NUMBER | KEYWORD | grouping_expression

property_call = atom (DOT SYMBOL)+

<grouping_expression> = LPAREN expression RPAREN

SYMBOL = #'[\p{L}][-+=!$%^&*<>_|\p{L}\p{N}]*'

KEYWORD = #'[\p{L}]+:'

OPERATOR = #'[-+=!$%^&*<>_][-+=!$%^&*<>_|\p{L}\p{N}]*'

NUMBER = #'[\d]+'

<DOT> = <'.'>

<COMMA> = <','>

<LPAREN> = <'('>

<RPAREN> = <')'>

<LINE_START> = <'≈'>

<INDENT> = <'»'>

<DEDENT> = <'«'>
